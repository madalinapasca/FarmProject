@page "/editfowl"
@page "/editfowl/{id:int}"


@using FarmProject.Client.Services.FoodServices
@inject IAnimalService AnimalsService;
@inject IFoodService FoodService;
@inject NavigationManager NavigationManager;
@inject IJSRuntime JS;

@if (Id == null)
{
	<h1>Optiune neexistenta</h1>
}
else
{
	<h3>Introudceti numarul de animale noi pentru categorie @animal.Name:</h3>
	<EditForm Model="animal" OnSubmit="HandleSubmit">
		<div class="form-group">
			<label for="name">Denumire</label>
			<InputText id="name" @bind-Value="animal.Name" class="form-control"></InputText>
		</div>
		<div class="form-group">
			<label for="quantity">Cantitate</label>
			<InputNumber id="quantity" @bind-Value="animal.Quantity" class="form-control"></InputNumber>
		</div>
		<button class="btn btn-primary" type="submit">Adauga</button>
	</EditForm>

	<a class="nav-link" href="addfowls">Reveniti la meniul anterior</a>
}



@code {
	[Parameter]
	public int? Id { get; set; }

	Fowl animal = new Fowl();
	Barn corn = new Barn();
	Barn hey = new Barn();
	
	double? qcornNeeds;
	double? fcornNeeds;
	double? cornStock;
	int idCorn = 1;
	

	protected override async Task OnParametersSetAsync()
	{
		if (Id != null)
			animal = await AnimalsService.GetSpecificFowl((int)Id);
		else
			Console.WriteLine("vad eu ce fac");
		qcornNeeds = await AnimalsService.QuadrupedsCornNeeds();
		fcornNeeds = await AnimalsService.FowlsCornNeeds();
		corn = await FoodService.GetSpecificFood((int)idCorn);
		cornStock = corn.Quantity;
		
		
		


	}

	async Task HandleSubmit()
	{
		double? cornRest = cornStock - (qcornNeeds + fcornNeeds);		
		cornRest = cornRest > 0 ? cornRest : 0;
		

		string message = $"Nu ajunge hrana pentru a hrani {animal.Quantity} {animal.Name} timp de o saptamana. Adaugati hrana in stoc înainte de a adauga animale noi.";
		if (animal.Corn != null & (animal.Quantity * animal.Corn * 7) <= cornRest)
		{
			await AnimalsService.UpdateFowl(animal);
			NavigationManager.NavigateTo("addanimals");
		}
		else

		{
			await JS.InvokeVoidAsync("displayAlert1", message);
		}
	}
}