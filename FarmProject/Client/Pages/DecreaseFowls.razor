@page "/decreasefowls/{id:int}"


@using FarmProject.Client.Services.FoodServices
@inject IAnimalService AnimalsService;
@inject IJSRuntime JS;

@if (Id == null)
{
	<h1>Optiune neexistenta</h1>
}
else
{
	<h3>Introudceti cu cat scade totalul de @animal.Name:</h3>
	<EditForm Model="animal" OnSubmit="HandleSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group">
			
			<InputNumber id="quantity" @bind-Value="animal.Quantity" class="form-control"></InputNumber>
		</div>
		<button class="btn btn-primary" type="submit">Redu</button>
	</EditForm>

	<a class="nav-link" href="addfowls">Reveniti la meniul anterior</a>

}



@code {
	[Parameter]
	public int? Id { get; set; }

	Fowl animal = new Fowl();
	

	protected override async Task OnParametersSetAsync()
	{
		if (Id != null)
			animal = await AnimalsService.GetSpecificFowl((int)Id);
		else
			Console.WriteLine("vad eu ce fac");

	}

	async Task HandleSubmit()
	{
		Fowl oldQuantity = await AnimalsService.GetSpecificFowl((int)Id);
		string message = "Cantitatea nu poate fi un numar negativ!";

		if (animal.Quantity > oldQuantity.Quantity)
		{
			await JS.InvokeVoidAsync("displayAlert1", message);
		}
		else
		{
			await AnimalsService.DecreaseFowlsNumber(animal);
		}

		
	}
}