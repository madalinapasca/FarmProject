@page "/editfood"
@page "/editfood/{id:int}"
@using FarmProject.Client.Services.FoodServices
@inject IFoodService FoodService;
@inject IJSRuntime JS

@if (Id == null)
{
	<h1>Optiune neexistenta</h1>
}
else
{
	<h3>Precizati cantitatea de @food.Name pe care doriti sa o adaugati:</h3>
	<EditForm Model="food" OnSubmit="HandleSubmit">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group">
			<label for="name">Denumire</label>
			<InputText id="name" @bind-Value="food.Name" class="form-control"></InputText>
		</div>
		<div class="form-group">
			<label for="quantity">Cantitate</label>
			<InputNumber id="quantity"  @bind-Value="food.Quantity" class="form-control"></InputNumber>
		</div>
		<button class="btn btn-primary" type="submit">Adauga</button>
	</EditForm>

	<a class="nav-link" href="addfood">Reveniti la meniul anterior</a>
}



@code {
	[Parameter]
	public int? Id { get; set; }

	Barn food = new Barn();

	protected override async Task OnParametersSetAsync()
	{
		if (Id != null)
			food = await FoodService.GetSpecificFood((int)Id);
		else
			Console.WriteLine("vad eu ce fac");

	}

	async Task HandleSubmit()
	{
		string message = "Cantitatea nu poate fi un numar negativ";
		if (food.Quantity >= 0)
		{
			await FoodService.UpdateFood(food);
		}
		else
		{
			await JS.InvokeVoidAsync("displayAlert1", message);
		}

	}
}
